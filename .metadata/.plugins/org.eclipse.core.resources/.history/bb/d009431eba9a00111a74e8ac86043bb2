
import java.awt.*;

import javax.swing.*;

import java.util.*;
import java.awt.event.*;
import java.util.ArrayList;


// This version is for the class - separate out the controller
//  sets up the GUI and other classes

 @SuppressWarnings({ "serial", "unused" })
public class LadyOrTigerGUIS extends JFrame
 {
   
		ActionListener action;
		JButton help;
		JButton left;
		JButton enter;
		JButton right;
		JButton around;



		javax.swing.Timer t;
		public int frame=0;

 
 private JTextArea outputArea;
 
 //DECLARE OBJECTS (DO NOT INSTANTIATE HERE) OF THE DRAWROOMS AND CONTROLPANEL CLASSES E.G
 // 
 DrawRooms drawroom;
 int current=0;


 
 // I AM GIVING CODE FOR THE JTEXTAREA TO SHOW YOU HOW TO PUT IT IN A SCROLLPANE
//************************************************************************************************
// 
//************************************************************************************************
public LadyOrTigerGUIS() 
 { 
 Container c = getContentPane();
  //   instantiate the JTextArea declared above  to output client names - e.g


  //INSTANTIATE HERE IN THIS ORDER
   
  // DRAWROOMS  - SEND THE ROOMS ARRAY AS A PARAMETER TO THE DRAWROOMS CONSTRUCTOR
 Maze maze = new Maze();
     drawroom = new DrawRooms(maze);
	 
	   
	// INSTANTIATE AN OBJECT OF CONTROLPANEL CLASS (CALL IT CONTROLS) - SEND IT THE OUTPUTAREA, DRAWROOM AND THE ARRAY OF INTS
	  
    // PUT A BORDER AROUND IT
   

	// set up the  WELCOME Panel TO HOLD THE LABEL
	// CREATE A BACKGROUND COLOR FOR IT AND SET ITS BORDER
	
	 
	// YOU WILL NEED SEVERAL PANELS, ONE FOR THE TOP OF THE SCREEN  - CALL IT TOPPANEL
		 JPanel toppanel = new JPanel();
		 action = new ActionListener()
				 {
				
				public void actionPerformed(ActionEvent e) {
					if (e.getActionCommand().equals("Turn Right")) // help button pressed
			        {
						
						rightturn();
						
			        }
					if (e.getActionCommand().equals("Turn Left")) // help button pressed
			        {

						leftturn();
			        }
					if(e.getActionCommand().equals("Enter"))
					{
					
						enter();
					}
					if(e.getActionCommand().equals("Turn Around"))
					{
					
						turnaround();
					}
					if(e.getActionCommand().equals("Help"))
					{
					
						drawroom.setturn("midright");
						drawroom.repaint();
					}
					if(e.getActionCommand().equals("Enter"))
					{
					
						drawroom.setturn("turn");
						drawroom.repaint();
					}
					if(e.getActionCommand().equals("free"))
					{
					
						drawroom.setturn("free");
						drawroom.repaint();
					}

				
				
				}
				
			};
		help = new JButton("Help");
		help.addActionListener(action);
		right = new JButton("Turn Right");
		right.addActionListener(action);
		enter = new JButton("Enter");
		enter.addActionListener(action);
		left = new JButton("Turn Left");
		left.addActionListener(action);
		around = new JButton("Turn Around");
		around.addActionListener(action);


		 toppanel.add(help);
		 toppanel.add(right);
		 toppanel.add(left);
		 toppanel.add(around);
		 toppanel.add(enter);



		 c.add(toppanel,BorderLayout.NORTH);

		 // where c is the contentPane
JPanel gridpane = new JPanel();	
gridpane.add(drawroom);
JScrollPane gridScrollPane = new JScrollPane(gridpane);

c.add(gridScrollPane,BorderLayout.CENTER);

	// THE BUTTONS WILL CREATED AND ADDED TO A PANEL IN CONTROLPANEL CLASS SO ALL YOU HAVE TO DO IS ADD
	// THE OBJECT OF THE CONTROLPANEL CLASS - controls - to the TOPPANEL
	
	// CREATE THE TOPPANEL OBJECT TO HOLD THE OBJECT OF THE CONTROLPANEL CLASS(WHICH HOLDS THE BUTTONS) AND THE JTEXTAREA
	
	// ADD THE CONTROLS PANEL OBJECT AND THE SCROLLPANE FOR THE JTEXTAREA  - YOU CAN USE A BORDERLAYOUT OR TRY A BOX LAYOUT

   // GET THE CONTENTPANE AND ADD THE TOPPANEL(NORTH) AND WELCOME PANEL(SOUTH)
	
	// DRAWROOMS WILL BE IN THE CENTER BUT WE HAVE NOT DONE THAT YET.  
	   c.setPreferredSize(new Dimension(850,700));
	   

 }
void rightturn()
{
	
	ActionListener action = new ActionListener()
	{

		public void actionPerformed(ActionEvent e) {
			if (frame==61){
				
				frame=0;
				drawroom.setNum(0);
				t.stop();
				drawroom.setturn("middle");
				drawroom.reset();
				drawroom.repaint();
			}
			else
			{
	    	drawroom.setNum(frame++);
	    	drawroom.setturn("r2");
			drawroom.repaint();
			}
		}
		
	};
			t = new javax.swing.Timer(1000/120,action);
				t.start();

    
}

void leftturn()
{
	ActionListener action = new ActionListener()
	{

		public void actionPerformed(ActionEvent e) {

			if (frame==61){
				
				frame=0;
				drawroom.setNum(0);
				t.stop();
				drawroom.setturn("middle");
				drawroom.reset();
				drawroom.repaint();
			}
			else
			{
	    	drawroom.setNum(frame++);
	    	drawroom.setturn("aleftturn");
			drawroom.repaint();
			}
		}
		
	};
			t = new javax.swing.Timer(1000/120,action);
				t.start();


}

void enter()
{
	ActionListener action = new ActionListener()
	{

		public void actionPerformed(ActionEvent e) {

			if (frame==41){
				
				frame=0;
				drawroom.setNum(0);
				t.stop();
				drawroom.setturn("middle");
				drawroom.reset();
				drawroom.repaint();				
			}
			else
			{
	    	drawroom.setNum(frame++);
	    	drawroom.setturn("e");
			drawroom.repaint();
			}
		}
		
	};
			t = new javax.swing.Timer(1000/120,action);
				t.start();


}
 }

   